name: Unit tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        include:
          - os: windows-latest
            python-version: "3.12"  # Windows fails on Python >= 3.13
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - run: |
          python -m pip install --upgrade pip
          python -m pip install "setuptools; python_version>='3.13'" "standard-aifc; python_version>='3.13'"
      - name: Install build dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y libpulse-dev libasound2-dev portaudio19-dev
      - name: Install ffmpeg (for Whisper)
        if: runner.os != 'macOS'
        uses: FedericoCarboni/setup-ffmpeg@v3
      - name: Install ffmpeg and portaudio on macOS
        if: runner.os == 'macOS'
        run: |
          brew install ffmpeg portaudio
          python -m pip install --no-build-isolation .[dev,audio,openai,groq]
      - name: Install Python dependencies (Ubuntu, Python <= 3.12)
        if: runner.os == 'Linux' && matrix.python-version != '3.13'
        run: |
          python -m pip install .[dev,audio,pocketsphinx,whisper-local,openai,groq]
      - name: Install Python dependencies (Linux, Python 3.13)
        if: runner.os == 'Linux' && matrix.python-version == '3.13'
        run: |
          python -m pip install --no-build-isolation .[dev,audio,pocketsphinx,openai,groq]
      - name: Install Python dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          python -m pip install .[dev,whisper-local,faster-whisper,google-cloud,openai,groq]
      - name: Test with unittest
        run: |
          pytest --doctest-modules --strict -v -W="ignore: aifc" speech_recognition/recognizers/ tests/
